{"version":3,"sources":["constants.js","icons.js","components/Todo.js","components/TodoList.js","components/BulkSelectors.js","components/FilterPanel.js","components/Analytics.js","helperFunctions.js","components/CreateTodoForm.js","customHooks/useTodoAppState.js","Server.js","customHooks/useFilterState.js","components/Modal.js","components/TodoApp.js","customHooks/useEditWindow.js","components/Header.js","App.js","index.js"],"names":["URGENCY","LOW","MEDIUM","HIGH","CATEGORY","PERSONAL","ACADEMIC","SOCIAL","NAMES","ACTIONS","icons","className","icon","faExclamationTriangle","faUser","faBook","faUsers","faEdit","faTrash","faCheckCircle","faSquare","Todo","React","memo","todo","onAction","toggleSelectTodo","showEditWindow","isSelected","todoClassName","isCompleted","data-id","id","onClick","event","type","payload","catch","err","console","log","text","time","urgency","category","updatedTodo","TodoList","todos","selectedTodoIds","map","includes","BulkSelectors","resetSelectedTodoIds","findTodoById","updateCompletedValue","updatedTodos","then","IconButton","value","filterState","handleClick","Object","entries","key","data-name","FilterPanel","toggleFilterState","useCallback","element","target","closest","dataset","name","Analytics","numberOfTodos","length","numberOfCompletedTodos","filter","ratioInDecimal","Math","round","getRatioInDecimal","rationInFraction","getRatioInFraction","helperFunctions","getTime","Date","toLocaleDateString","toLocaleTimeString","makeCopy","item","Array","isArray","obj","convertToList","object","initialTodo","reducer","action","Option","CreateTodoForm","useReducer","dispatch","updateState","onKeyPress","keyCode","which","todoObject","valueOf","createTodoObject","data-type","placeholder","onChange","server","isServerWorking","random","FailProbability","getDatabase","Promise","resolve","reject","database","saveDatabaseInLocalStorage","localStorage","setItem","JSON","stringify","loadDatabaseFromLocalStorage","parse","getItem","findIndexOfTodoById","findIndex","createTodo","todoList","todoListCopy","deleteTodo","todoIds","todoIdsList","updateTodo","databaseCopy","forEach","index","this","useTodoAppState","useEffect","addTodo","find","initialFilterState","useFilterState","useState","setFilterState","prev","filterTodos","urgencyFilter","categoryFilter","filterAccordingToUrgencyAndCategory","Modal","closeEditWindow","setUpdatedTodo","TodoApp","show","editWindow","setEditWindow","useMemo","useEditWindow","setSelectedTodoIds","todoId","concat","filteredTodos","Header","currentDate","toDateString","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8db903d9.chunk.js","sourcesContent":["export const URGENCY = {\n  LOW: \"low\",\n  MEDIUM: \"medium\",\n  HIGH: \"high\",\n};\n\nexport const CATEGORY = {\n  PERSONAL: \"personal\",\n  ACADEMIC: \"academic\",\n  SOCIAL: \"social\",\n};\n\nexport const NAMES = {\n  URGENCY: \"urgency\",\n  CATEGORY: \"category\",\n  TEXT: \"text\",\n};\n\nexport const ACTIONS = {\n  EDIT: \"EDIT\",\n  DELETE: \"DELETE\",\n  BULKCOMPLETE: \"BULKCOMPLETE\",\n  BULKINCOMPLETE: \"BULKINCOMPLETE\",\n  BULKDELETE: \"BULKDELETE\",\n  RESET: \"RESET\",\n  UPDATE: \"UPDATE\",\n  ADD: \"ADD\",\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faCheckCircle,\n  faEdit,\n  faExclamationTriangle,\n  faSquare,\n  faTrash,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { CATEGORY, URGENCY, ACTIONS } from \"./constants\";\n\nexport const icons = {\n  [URGENCY.LOW]: (\n    <FontAwesomeIcon className=\"grey\" icon={faExclamationTriangle} />\n  ),\n  [URGENCY.MEDIUM]: (\n    <FontAwesomeIcon className=\"orange\" icon={faExclamationTriangle} />\n  ),\n\n  [URGENCY.HIGH]: (\n    <FontAwesomeIcon className=\"red\" icon={faExclamationTriangle} />\n  ),\n\n  [CATEGORY.PERSONAL]: <FontAwesomeIcon className=\"blue\" icon={faUser} />,\n  [CATEGORY.ACADEMIC]: <FontAwesomeIcon className=\"grey\" icon={faBook} />,\n  [CATEGORY.SOCIAL]: <FontAwesomeIcon className=\"pink\" icon={faUsers} />,\n  [ACTIONS.EDIT]: <FontAwesomeIcon icon={faEdit} />,\n  [ACTIONS.DELETE]: <FontAwesomeIcon icon={faTrash} />,\n  [ACTIONS.BULKCOMPLETE]: <FontAwesomeIcon icon={faCheckCircle} />,\n  [ACTIONS.BULKINCOMPLETE]: <FontAwesomeIcon icon={faSquare} />,\n  [ACTIONS.BULKDELETE]: <FontAwesomeIcon icon={faTrash} />,\n};\n","import { ACTIONS } from \"../constants\";\nimport { icons } from \"../icons\";\nimport React from \"react\";\n\nexport const Todo = React.memo(\n  ({ todo, onAction, toggleSelectTodo, showEditWindow, isSelected }) => {\n    const toggleComplete = (event) => {\n      const updatedTodo = { ...todo, isCompleted: !todo.isCompleted };\n      onAction({\n        type: ACTIONS.UPDATE,\n        payload: updatedTodo,\n      }).catch((err) => {\n        console.log(err);\n        //ADD SNACKBAR HERE\n      });\n    };\n\n    const onDelete = (event) => {\n      onAction({\n        type: ACTIONS.DELETE,\n        payload: todo.id,\n      }).catch((err) => {\n        console.log(err);\n        //ADD SNACKBAR HERE\n      });\n    };\n\n    const onSelect = (event) => {\n      toggleSelectTodo(todo.id);\n    };\n\n    const onEdit = () => {\n      showEditWindow(todo);\n    };\n\n    let todoClassName = \"todo\";\n    if (todo.isCompleted) {\n      todoClassName = todoClassName + \" opacity\";\n    }\n    if (isSelected) {\n      todoClassName = todoClassName + \" selected\";\n    }\n\n    return (\n      <div className={todoClassName} data-id={todo.id}>\n        <div className=\"buttons\">\n          <button className=\"edit\" onClick={onEdit}>\n            {icons[ACTIONS.EDIT]}\n          </button>\n          <button className=\"delete\" onClick={onDelete}>\n            {icons[ACTIONS.DELETE]}\n          </button>\n        </div>\n\n        <div className=\"todoText\">{todo.text}</div>\n\n        <div className=\"time\">{todo.time}</div>\n\n        <div className=\"symbols\">\n          {icons[todo.urgency]}\n          {icons[todo.category]}\n        </div>\n\n        <div className=\"complete\">\n          <button className=\"completeButton\" onClick={toggleComplete}>\n            {todo.isCompleted ? \"Completed. Undo?\" : \"Mark Complete\"}\n          </button>\n        </div>\n\n        <div\n          className={isSelected ? \"notSelect bgRed\" : \"notSelect bgWhite\"}\n          onClick={onSelect}\n        ></div>\n      </div>\n    );\n  }\n);\n\n//DOUBT should functions be memoized here?\n","import { Todo } from \"./Todo\";\nimport React from \"react\";\nexport const TodoList = React.memo(\n  ({ todos, onAction, toggleSelectTodo, selectedTodoIds, showEditWindow }) => {\n    return (\n      <>\n        <div className=\"todoList\">\n          {todos.map((todo) => (\n            <Todo\n              key={todo.id}\n              todo={todo}\n              onAction={onAction}\n              toggleSelectTodo={toggleSelectTodo}\n              showEditWindow={showEditWindow}\n              isSelected={selectedTodoIds.includes(todo.id)}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n);\n//DOUBT does it make sense to memoize Todo?\n//React.memo remembers previous memoized value, or many memoized values?\n","import { ACTIONS } from \"../constants\";\nimport { icons } from \"../icons\";\nimport React from \"react\";\n\nexport const BulkSelectors = React.memo(\n  ({ selectedTodoIds, resetSelectedTodoIds, onAction, findTodoById }) => {\n    const updateCompletedValue = (isCompleted) => {\n      const updatedTodos = selectedTodoIds.map(findTodoById).map((todo) => {\n        return { ...todo, isCompleted };\n      });\n      onAction({\n        type: ACTIONS.UPDATE,\n        payload: updatedTodos,\n      })\n        .then(() => {\n          resetSelectedTodoIds();\n        })\n        .catch((err) => {\n          console.log(err);\n          //ADD SNACKBAR HERE\n        });\n    };\n\n    const onDelete = () => {\n      onAction({\n        type: ACTIONS.DELETE,\n        payload: selectedTodoIds,\n      })\n        .then(() => {\n          resetSelectedTodoIds();\n        })\n        .catch((err) => {\n          console.log(err);\n          //ADD SNACKBAR HERE\n        });\n    };\n\n    return (\n      <>\n        <div className=\"bulkSelection\">\n          <div className=\"completeSelection\">\n            <div className=\"hiddenTextCompleteSelection\">\n              Mark Selection Complete\n            </div>\n            <button\n              className=\"round\"\n              onClick={() => updateCompletedValue(true)}\n            >\n              {icons[ACTIONS.BULKCOMPLETE]}\n            </button>\n          </div>\n\n          <div className=\"incompleteSelection\">\n            <span className=\"hiddenTextIncompleteSelection\">\n              Mark Selection Incomplete\n            </span>\n            <button\n              className=\"round\"\n              onClick={() => updateCompletedValue(false)}\n            >\n              {icons[ACTIONS.BULKINCOMPLETE]}\n            </button>\n          </div>\n\n          <div className=\"deleteSelection\">\n            <span className=\"hiddenTextDeleteSelection\">Delete Selection</span>\n            <button className=\"round\" onClick={onDelete}>\n              {icons[ACTIONS.BULKDELETE]}\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n);\n","import { URGENCY, CATEGORY } from \"../constants\";\nimport { icons } from \"../icons\";\nimport React, { useCallback } from \"react\";\n\nconst IconButton = React.memo(({ value, filterState, handleClick }) => {\n  return Object.entries(value).map(([key, value]) => {\n    let className;\n    if (filterState[value]) {\n      className = \"icon larger\";\n    } else {\n      className = \"icon\";\n    }\n    return (\n      <button\n        onClick={handleClick}\n        className={className}\n        data-name={value}\n        key={key}\n      >\n        {icons[value]}\n      </button>\n    );\n  });\n});\n\nexport const FilterPanel = React.memo(({ filterState, toggleFilterState }) => {\n  const handleClick = useCallback(\n    (event) => {\n      const element = event.target.closest(\"[data-name]\");\n      if (element) {\n        toggleFilterState(element.dataset.name);\n      }\n    },\n    [toggleFilterState]\n  );\n  return (\n    <>\n      <div className=\"filter colorAndRadius\">\n        <div className=\"logos\">\n          {\n            <IconButton\n              value={URGENCY}\n              filterState={filterState}\n              handleClick={handleClick}\n            />\n          }\n          {\n            <IconButton\n              value={CATEGORY}\n              filterState={filterState}\n              handleClick={handleClick}\n            />\n          }\n        </div>\n        <p className=\"filterText\">Filter Todos</p>\n      </div>\n    </>\n  );\n});\n","import React from \"react\";\n\nconst getRatioInDecimal = (numberOfTodos, numberOfCompletedTodos) => {\n  let value;\n  if (numberOfCompletedTodos === 0) {\n    value = 0;\n  } else {\n    value = Math.round((100 * numberOfCompletedTodos) / numberOfTodos);\n  }\n\n  return value + \" % \";\n};\n\nconst getRatioInFraction = (numberOfTodos, numberOfCompletedTodos) => {\n  return numberOfCompletedTodos + \" / \" + numberOfTodos;\n};\n\nexport const Analytics = React.memo(({ todos }) => {\n  const numberOfTodos = todos.length;\n  const numberOfCompletedTodos = todos.filter(\n    (todo) => todo.isCompleted === true\n  ).length;\n\n  const ratioInDecimal = getRatioInDecimal(\n    numberOfTodos,\n    numberOfCompletedTodos\n  );\n\n  const rationInFraction = getRatioInFraction(\n    numberOfTodos,\n    numberOfCompletedTodos\n  );\n  return (\n    <div className=\"analytics colorAndRadius\">\n      <div className=\"circle\">\n        <div className=\"percent\">{ratioInDecimal}</div>\n        <div className=\"ratio\">{rationInFraction}</div>\n      </div>\n      <p className=\"analyticsText\">Analytics</p>\n    </div>\n  );\n});\n","const helperFunctions = {\n  getTime: () => {\n    const date = new Date().toLocaleDateString();\n    const time = new Date().toLocaleTimeString();\n\n    return date + \", \" + time;\n  },\n\n  makeCopy: (item) => {\n    //If it is an array of objects\n    if (Array.isArray(item) && item[0] instanceof Object) {\n      return item.map((obj) => ({ ...obj }));\n    }\n    // Else if it is an object\n    else if (item instanceof Object) {\n      return { ...item };\n    }\n    //Primitive value\n    else {\n      return item;\n    }\n  },\n};\n\nconst convertToList = (object) => {\n  if (Array.isArray(object)) {\n    return object;\n  } else {\n    return [object];\n  }\n};\n\nhelperFunctions.convertToList = convertToList;\n\nexport { helperFunctions };\n","import React, { useCallback, useReducer } from \"react\";\nimport { ACTIONS, CATEGORY, URGENCY, NAMES } from \"../constants\";\nimport { helperFunctions } from \"../helperFunctions\";\n\nconst initialTodo = {\n  [NAMES.TEXT]: \"\",\n  [NAMES.URGENCY]: URGENCY.LOW,\n  [NAMES.CATEGORY]: CATEGORY.PERSONAL,\n};\n\nconst reducer = (todo, action) => {\n  switch (action.type) {\n    case ACTIONS.UPDATE:\n      return { ...todo, [action.payload.type]: action.payload.value };\n\n    case ACTIONS.RESET:\n      return initialTodo;\n\n    default:\n      return todo;\n  }\n};\n\nconst createTodoObject = (todo) => {\n  return {\n    id: new Date().valueOf(),\n    isCompleted: false,\n    time: helperFunctions.getTime(),\n    ...todo,\n  };\n};\n\nconst Option = React.memo(({ value }) => {\n  return (\n    <>\n      {Object.entries(value).map(([key, value]) => {\n        return (\n          <option value={value} key={key}>\n            {value}\n          </option>\n        );\n      })}\n    </>\n  );\n});\n\nexport const CreateTodoForm = React.memo(({ onAction }) => {\n  const [todo, dispatch] = useReducer(reducer, initialTodo);\n\n  const handleKeyPress = (event) => {\n    const enterKey = event.keyCode || event.which || 0;\n    if (enterKey === 13 && todo.text) {\n      const todoObject = createTodoObject(todo);\n      onAction({\n        type: ACTIONS.ADD,\n        payload: todoObject,\n      })\n        .then(() => {\n          dispatch({ type: ACTIONS.RESET });\n        })\n        .catch((err) => {\n          console.log(err);\n          //ADD SNACKBAR HERE\n        });\n    }\n  };\n\n  const updateState = useCallback((event) => {\n    dispatch({\n      type: ACTIONS.UPDATE,\n      payload: {\n        type: event.target.dataset.type,\n        value: event.target.value,\n      },\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"createTodo colorAndRadius\" onKeyPress={handleKeyPress}>\n        <div className=\"createText\">Create Todo</div>\n        <input\n          data-type={NAMES.TEXT}\n          value={todo[NAMES.TEXT]}\n          type=\"text\"\n          className=\"addTodo\"\n          placeholder=\"Add Your Todo...\"\n          onChange={updateState}\n        />\n        <div className=\"urgency\">\n          <p className=\"text\">Urgency</p>\n          <select\n            value={todo[NAMES.URGENCY]}\n            data-type={NAMES.URGENCY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={URGENCY} />}\n          </select>\n        </div>\n        <div className=\"category\">\n          <p className=\"text\">Category</p>\n          <select\n            value={todo[NAMES.CATEGORY]}\n            data-type={NAMES.CATEGORY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={CATEGORY} />}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n});\n","import { useCallback } from \"react\";\nimport { useEffect, useReducer } from \"react\";\nimport { ACTIONS } from \"../constants\";\nimport { helperFunctions } from \"../helperFunctions\";\nimport { Server } from \"../Server\";\n\nconst server = new Server();\n\nconst reducer = (todos, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD:\n      return [...todos, action.payload];\n\n    case ACTIONS.DELETE:\n      return todos.filter((todo) => todo.id !== action.payload);\n\n    case ACTIONS.UPDATE:\n      return todos.map((todo) => {\n        if (todo.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return todo;\n        }\n      });\n\n    default:\n      return todos;\n  }\n};\n\nexport const useTodoAppState = () => {\n  const [todos, dispatch] = useReducer(reducer, []);\n\n  useEffect(() => {\n    server.getDatabase().then((todos) => {\n      if (todos) {\n        todos.forEach?.((todo) => {\n          dispatch({\n            type: ACTIONS.ADD,\n            payload: todo,\n          });\n        });\n      }\n    });\n  }, []);\n\n  const addTodo = (todos) => {\n    return server.createTodo(todos).then(() => {\n      helperFunctions.convertToList(todos).forEach((todo) => {\n        dispatch({\n          type: ACTIONS.ADD,\n          payload: todo,\n        });\n      });\n    });\n  };\n\n  const deleteTodo = (todoIds) => {\n    return server.deleteTodo(todoIds).then(() => {\n      helperFunctions.convertToList(todoIds).forEach((id) => {\n        dispatch({\n          type: ACTIONS.DELETE,\n          payload: id,\n        });\n      });\n    });\n  };\n\n  const updateTodo = (todos) => {\n    return server.updateTodo(todos).then(() => {\n      helperFunctions.convertToList(todos).forEach((todo) => {\n        dispatch({\n          type: ACTIONS.UPDATE,\n          payload: todo,\n        });\n      });\n    });\n  };\n\n  const onAction = useCallback((action) => {\n    switch (action.type) {\n      case ACTIONS.ADD:\n        return addTodo(action.payload);\n\n      case ACTIONS.UPDATE:\n        return updateTodo(action.payload);\n\n      case ACTIONS.DELETE:\n        return deleteTodo(action.payload);\n\n      default:\n        break;\n    }\n  }, []);\n\n  const findTodoById = useCallback(\n    (id) => {\n      return todos.find((todo) => todo.id === id);\n    },\n    [todos]\n  );\n\n  return [todos, findTodoById, onAction];\n};\n","import { helperFunctions } from \"./helperFunctions.js\";\n\nexport class Server {\n  constructor() {\n    this.database = this.loadDatabaseFromLocalStorage();\n    this.FailProbability = 0;\n  }\n\n  isServerWorking = () => {\n    const current = Math.random();\n    if (current > this.FailProbability) {\n      return true;\n    }\n    return false;\n  };\n\n  getDatabase = () => {\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        resolve(helperFunctions.makeCopy(this.database));\n      } else {\n        reject(\"Please Refresh Again\");\n      }\n    });\n  };\n\n  saveDatabaseInLocalStorage = () =>\n    localStorage.setItem(\"todos\", JSON.stringify(this.database));\n\n  loadDatabaseFromLocalStorage = () =>\n    JSON.parse(localStorage.getItem(\"todos\")) || [];\n\n  findIndexOfTodoById = (id) =>\n    this.database.findIndex((todo) => todo.id === id);\n\n  createTodo = (todos) => {\n    const todoList = helperFunctions.convertToList(todos);\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        const todoListCopy = helperFunctions.makeCopy(todoList);\n        this.database = [...this.database, ...todoListCopy];\n        this.saveDatabaseInLocalStorage();\n        resolve(\"done\");\n      } else {\n        reject(\"Could Not Add Bulk Todos\");\n      }\n    });\n  };\n\n  deleteTodo = (todoIds) => {\n    const todoIdsList = helperFunctions.convertToList(todoIds);\n\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        this.database = this.database.filter((todo) => {\n          return !todoIdsList.includes(todo.id);\n        });\n        this.saveDatabaseInLocalStorage();\n\n        resolve(\"done\");\n      } else {\n        reject(\"Could Not Delete Selected Todos\");\n      }\n    });\n  };\n\n  updateTodo = (todos) => {\n    const todoList = helperFunctions.convertToList(todos);\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        const databaseCopy = helperFunctions.makeCopy(this.database);\n        todoList.forEach((todo) => {\n          const index = this.findIndexOfTodoById(todo.id);\n          databaseCopy[index] = { ...todo };\n        });\n        this.database = databaseCopy;\n        this.saveDatabaseInLocalStorage();\n        resolve(\"done\");\n      } else {\n        reject(\"Could Not Update Selected Todos\");\n      }\n    });\n  };\n}\n","import { URGENCY, CATEGORY, NAMES } from \"../constants\";\nimport { useState, useCallback } from \"react\";\n\nconst initialFilterState = {\n  [URGENCY.LOW]: false,\n  [URGENCY.MEDIUM]: false,\n  [URGENCY.HIGH]: false,\n  [CATEGORY.PERSONAL]: false,\n  [CATEGORY.ACADEMIC]: false,\n  [CATEGORY.SOCIAL]: false,\n};\n\nexport const useFilterState = () => {\n  const [filterState, setFilterState] = useState(initialFilterState);\n\n  const toggleFilterState = useCallback((filter) => {\n    setFilterState((prev) => ({ ...prev, [filter]: !prev[filter] }));\n  }, []);\n\n  const computeUrgencyFilterValue = () => {\n    return (\n      filterState[URGENCY.LOW] ||\n      filterState[URGENCY.MEDIUM] ||\n      filterState[URGENCY.HIGH]\n    );\n  };\n\n  const computeCategoryFilterValue = () => {\n    return (\n      filterState[CATEGORY.PERSONAL] ||\n      filterState[CATEGORY.ACADEMIC] ||\n      filterState[CATEGORY.SOCIAL]\n    );\n  };\n\n  const filterAccordingToUrgencyAndCategory = (todos) => {\n    return todos.filter((todo) => {\n      return (\n        filterState[[todo[NAMES.URGENCY]]] ||\n        filterState[[todo[NAMES.CATEGORY]]]\n      );\n    });\n  };\n\n  const filterTodos = useCallback(\n    (todos) => {\n      const urgencyFilter = computeUrgencyFilterValue();\n\n      const categoryFilter = computeCategoryFilterValue();\n\n      if (urgencyFilter === false && categoryFilter === false) {\n        return todos;\n      }\n\n      return filterAccordingToUrgencyAndCategory(todos);\n    },\n    [filterState]\n  );\n  //DOUBT\n\n  return [filterState, filterTodos, toggleFilterState];\n};\n","import React, { useState } from \"react\";\nimport { ACTIONS, CATEGORY, NAMES, URGENCY } from \"../constants\";\n\nconst Option = ({ value }) => {\n  return (\n    <>\n      {Object.entries(value).map(([key, value]) => {\n        return (\n          <option value={value} key={key}>\n            {value}\n          </option>\n        );\n      })}\n    </>\n  );\n};\nexport const Modal = ({ todo, closeEditWindow, onAction }) => {\n  const [updatedTodo, setUpdatedTodo] = useState(todo);\n\n  const updateState = (event) => {\n    setUpdatedTodo((prev) => ({\n      ...prev,\n      [event.target.dataset.type]: event.target.value,\n    }));\n  };\n\n  const onCancel = () => {\n    closeEditWindow();\n  };\n\n  const onSave = () => {\n    onAction({\n      type: ACTIONS.UPDATE,\n      payload: updatedTodo,\n    })\n      .then(closeEditWindow)\n      .catch((err) => {\n        console.log(err);\n        //ADD SNACKBAR HERE\n      });\n  };\n\n  return (\n    <div className=\"myModal\">\n      <div className=\"modalContent\">\n        <input\n          data-type={NAMES.TEXT}\n          type=\"text\"\n          className=\"addTodo\"\n          value={updatedTodo[NAMES.TEXT]}\n          onChange={updateState}\n        />\n        <div className=\"urgency\">\n          <p className=\"text\">Urgency</p>\n          <select\n            value={updatedTodo[NAMES.URGENCY]}\n            data-type={NAMES.URGENCY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={URGENCY} />}\n          </select>\n        </div>\n        <div className=\"category\">\n          <p className=\"text\">Category</p>\n          <select\n            value={updatedTodo[NAMES.CATEGORY]}\n            data-type={NAMES.CATEGORY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={CATEGORY} />}\n          </select>\n        </div>\n        <div className=\"modalButtons\">\n          <button className=\"cancel\" onClick={onCancel}>\n            Cancel\n          </button>\n          <button className=\"save\" onClick={onSave}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { TodoList } from \"./TodoList\";\nimport { BulkSelectors } from \"./BulkSelectors\";\nimport { FilterPanel } from \"./FilterPanel\";\nimport { Analytics } from \"./Analytics\";\nimport { CreateTodoForm } from \"./CreateTodoForm\";\nimport { useTodoAppState } from \"../customHooks/useTodoAppState\";\nimport { useFilterState } from \"../customHooks/useFilterState\";\nimport { useState } from \"react\";\nimport { useEditWindow } from \"../customHooks/useEditWindow\";\nimport React, { useCallback, useMemo } from \"react\";\nexport const TodoApp = React.memo(() => {\n  const [todos, findTodoById, onAction] = useTodoAppState();\n  const [filterState, filterTodos, toggleFilterState] = useFilterState();\n  const [editWindow, showEditWindow] = useEditWindow(onAction);\n  const [selectedTodoIds, setSelectedTodoIds] = useState([]);\n\n  const toggleSelectTodo = useCallback((id) => {\n    setSelectedTodoIds((prev) => {\n      if (prev.includes(id)) {\n        return prev.filter((todoId) => todoId !== id);\n      } else {\n        return prev.concat(id);\n      }\n    });\n  }, []);\n\n  const resetSelectedTodoIds = useCallback(() => {\n    setSelectedTodoIds([]);\n  }, []);\n\n  const filteredTodos = useMemo(() => filterTodos(todos), [filterTodos, todos]);\n\n  return (\n    <>\n      <div className=\"mainBody\">\n        <div className=\"col1 colorAndRadius\">\n          <TodoList\n            todos={filteredTodos}\n            onAction={onAction}\n            toggleSelectTodo={toggleSelectTodo}\n            selectedTodoIds={selectedTodoIds}\n            showEditWindow={showEditWindow}\n          />\n          <BulkSelectors\n            selectedTodoIds={selectedTodoIds}\n            resetSelectedTodoIds={resetSelectedTodoIds}\n            onAction={onAction}\n            findTodoById={findTodoById}\n          />\n        </div>\n\n        <div className=\"col2\">\n          <FilterPanel\n            filterState={filterState}\n            toggleFilterState={toggleFilterState}\n          />\n          <Analytics todos={filteredTodos} />\n          <CreateTodoForm onAction={onAction} />\n        </div>\n      </div>\n      {editWindow}\n    </>\n  );\n});\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport { Modal } from \"../components/Modal\";\n\nexport const useEditWindow = (onAction) => {\n  const [editWindow, setEditWindow] = useState({ show: false });\n\n  const showEditWindow = useCallback((todo) => {\n    setEditWindow({ show: true, payload: todo });\n  }, []);\n\n  const closeEditWindow = useCallback(() => {\n    setEditWindow({ show: false });\n  }, []);\n\n  // let modal = undefined;\n  // if (editWindow.show === true) {\n  //   modal = (\n  //     <Modal\n  //       todo={editWindow.payload}\n  //       closeEditWindow={closeEditWindow}\n  //       onAction={onAction}\n  //     />\n  //   );\n  // }\n\n  const modal = useMemo(() => {\n    if (editWindow.show === true) {\n      return (\n        <Modal\n          todo={editWindow.payload}\n          closeEditWindow={closeEditWindow}\n          onAction={onAction}\n        />\n      );\n    } else {\n      return undefined;\n    }\n  }, [editWindow, closeEditWindow, onAction]);\n  //DOUBT\n\n  return [modal, showEditWindow];\n};\n","import React from \"react\";\nexport const Header = React.memo(() => {\n  const currentDate = new Date().toDateString();\n  return (\n    <>\n      <div className=\"header colorAndRadius\">\n        <div className=\"date\">{currentDate}</div>\n        <div className=\"heading\">To-Do App</div>\n      </div>\n    </>\n  );\n});\n","import \"./App.css\";\nimport { TodoApp } from \"./components/TodoApp\";\nimport { Header } from \"./components/Header\";\nfunction App() {\n  return (\n    <>\n      <Header />\n      <TodoApp />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}