{"version":3,"sources":["constants.js","icons.js","components/Todo.js","components/TodoList.js","components/BulkSelectors.js","components/FilterPanel.js","components/Analytics.js","helperFunctions.js","components/CreateTodoForm.js","customHooks/useTodoAppState.js","Server.js","customHooks/useFilterState.js","components/Modal.js","components/TodoApp.js","customHooks/useEditWindow.js","components/Header.js","App.js","index.js"],"names":["URGENCY","LOW","MEDIUM","HIGH","CATEGORY","PERSONAL","ACADEMIC","SOCIAL","NAMES","ACTIONS","icons","className","icon","faExclamationTriangle","faUser","faBook","faUsers","faEdit","faTrash","faCheckCircle","faSquare","Todo","todo","onAction","toggleSelectTodo","showEditWindow","isSelected","todoClassName","isCompleted","data-id","id","onClick","event","type","payload","text","time","urgency","category","updatedTodo","TodoList","todos","selectedTodoIds","map","includes","BulkSelectors","resetSelectedTodoIds","findTodoById","updateCompletedValue","updatedTodos","then","IconButton","value","filterState","handleClick","Object","entries","key","data-name","FilterPanel","toggleFilterState","element","target","closest","dataset","name","Analytics","numberOfTodos","length","numberOfCompletedTodos","filter","ratioInDecimal","Math","round","getRatioInDecimal","rationInFraction","getRatioInFraction","helperFunctions","getTime","Date","toLocaleDateString","toLocaleTimeString","makeCopy","item","Array","isArray","obj","convertToList","object","initialTodo","reducer","action","Option","CreateTodoForm","useReducer","dispatch","updateState","onKeyPress","keyCode","which","todoObject","valueOf","createTodoObject","data-type","placeholder","onChange","server","isServerWorking","random","FailProbability","getDatabase","Promise","resolve","reject","database","saveDatabaseInLocalStorage","localStorage","setItem","JSON","stringify","loadDatabaseFromLocalStorage","parse","getItem","findIndexOfTodoById","findIndex","createTodo","todoList","todoListCopy","deleteTodo","todoIds","todoIdsList","updateTodo","databaseCopy","forEach","index","this","useTodoAppState","useEffect","find","addTodo","initialFilterState","useFilterState","useState","setFilterState","urgencyFilter","categoryFilter","filterAccordingToUrgencyAndCategory","prev","Modal","closeEditWindow","setUpdatedTodo","TodoApp","filterTodos","show","editWindow","setEditWindow","modal","undefined","useEditWindow","setSelectedTodoIds","filteredTodos","todoId","concat","Header","currentDate","toDateString","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0816bbae.chunk.js","sourcesContent":["export const URGENCY = {\n  LOW: \"low\",\n  MEDIUM: \"medium\",\n  HIGH: \"high\",\n};\n\nexport const CATEGORY = {\n  PERSONAL: \"personal\",\n  ACADEMIC: \"academic\",\n  SOCIAL: \"social\",\n};\n\nexport const NAMES = {\n  URGENCY: \"urgency\",\n  CATEGORY: \"category\",\n  TEXT: \"text\",\n};\n\nexport const ACTIONS = {\n  EDIT: \"EDIT\",\n  DELETE: \"DELETE\",\n  BULKCOMPLETE: \"BULKCOMPLETE\",\n  BULKINCOMPLETE: \"BULKINCOMPLETE\",\n  BULKDELETE: \"BULKDELETE\",\n  RESET: \"RESET\",\n  UPDATE: \"UPDATE\",\n  ADD: \"ADD\",\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faCheckCircle,\n  faEdit,\n  faExclamationTriangle,\n  faSquare,\n  faTrash,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { CATEGORY, URGENCY, ACTIONS } from \"./constants\";\n\nexport const icons = {\n  [URGENCY.LOW]: (\n    <FontAwesomeIcon className=\"grey\" icon={faExclamationTriangle} />\n  ),\n  [URGENCY.MEDIUM]: (\n    <FontAwesomeIcon className=\"orange\" icon={faExclamationTriangle} />\n  ),\n\n  [URGENCY.HIGH]: (\n    <FontAwesomeIcon className=\"red\" icon={faExclamationTriangle} />\n  ),\n\n  [CATEGORY.PERSONAL]: <FontAwesomeIcon className=\"blue\" icon={faUser} />,\n  [CATEGORY.ACADEMIC]: <FontAwesomeIcon className=\"grey\" icon={faBook} />,\n  [CATEGORY.SOCIAL]: <FontAwesomeIcon className=\"pink\" icon={faUsers} />,\n  [ACTIONS.EDIT]: <FontAwesomeIcon icon={faEdit} />,\n  [ACTIONS.DELETE]: <FontAwesomeIcon icon={faTrash} />,\n  [ACTIONS.BULKCOMPLETE]: <FontAwesomeIcon icon={faCheckCircle} />,\n  [ACTIONS.BULKINCOMPLETE]: <FontAwesomeIcon icon={faSquare} />,\n  [ACTIONS.BULKDELETE]: <FontAwesomeIcon icon={faTrash} />,\n};\n","import { ACTIONS } from \"../constants\";\nimport { icons } from \"../icons\";\n\nexport const Todo = ({\n  todo,\n  onAction,\n  toggleSelectTodo,\n  showEditWindow,\n  isSelected,\n}) => {\n  const toggleComplete = (event) => {\n    const updatedTodo = { ...todo, isCompleted: !todo.isCompleted };\n    onAction({\n      type: ACTIONS.UPDATE,\n      payload: updatedTodo,\n    });\n  };\n\n  const onDelete = (event) => {\n    onAction({\n      type: ACTIONS.DELETE,\n      payload: todo.id,\n    });\n  };\n\n  const onSelect = (event) => {\n    toggleSelectTodo(todo.id);\n  };\n\n  const onEdit = () => {\n    showEditWindow(todo);\n  };\n\n  let todoClassName = \"todo\";\n  if (todo.isCompleted) {\n    todoClassName = todoClassName + \" opacity\";\n  }\n  if (isSelected) {\n    todoClassName = todoClassName + \" selected\";\n  }\n\n  return (\n    <div className={todoClassName} data-id={todo.id}>\n      <div className=\"buttons\">\n        <button className=\"edit\" onClick={onEdit}>\n          {icons[ACTIONS.EDIT]}\n        </button>\n        <button className=\"delete\" onClick={onDelete}>\n          {icons[ACTIONS.DELETE]}\n        </button>\n      </div>\n\n      <div className=\"todoText\">{todo.text}</div>\n\n      <div className=\"time\">{todo.time}</div>\n\n      <div className=\"symbols\">\n        {icons[todo.urgency]}\n        {icons[todo.category]}\n      </div>\n\n      <div className=\"complete\">\n        <button className=\"completeButton\" onClick={toggleComplete}>\n          {todo.isCompleted ? \"Completed. Undo?\" : \"Mark Complete\"}\n        </button>\n      </div>\n\n      <div\n        className={isSelected ? \"notSelect bgRed\" : \"notSelect bgWhite\"}\n        onClick={onSelect}\n      ></div>\n    </div>\n  );\n};\n","import { Todo } from \"./Todo\";\nexport const TodoList = ({\n  todos,\n  onAction,\n  toggleSelectTodo,\n  selectedTodoIds,\n  showEditWindow,\n}) => {\n  return (\n    <>\n      <div className=\"todoList\">\n        {todos.map((todo) => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            onAction={onAction}\n            toggleSelectTodo={toggleSelectTodo}\n            showEditWindow={showEditWindow}\n            isSelected={selectedTodoIds.includes(todo.id)}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { ACTIONS } from \"../constants\";\nimport { icons } from \"../icons\";\n\nexport const BulkSelectors = ({\n  selectedTodoIds,\n  resetSelectedTodoIds,\n  onAction,\n  findTodoById,\n}) => {\n  const updateCompletedValue = (isCompleted) => {\n    const updatedTodos = selectedTodoIds.map(findTodoById).map((todo) => {\n      return { ...todo, isCompleted };\n    });\n    onAction({\n      type: ACTIONS.UPDATE,\n      payload: updatedTodos,\n    }).then(() => {\n      resetSelectedTodoIds();\n    });\n  };\n\n  const onDelete = () => {\n    onAction({\n      type: ACTIONS.DELETE,\n      payload: selectedTodoIds,\n    }).then(() => {\n      resetSelectedTodoIds();\n    });\n  };\n  return (\n    <>\n      <div className=\"bulkSelection\">\n        <div className=\"completeSelection\">\n          <div className=\"hiddenTextCompleteSelection\">\n            Mark Selection Complete\n          </div>\n          <button className=\"round\" onClick={() => updateCompletedValue(true)}>\n            {icons[ACTIONS.BULKCOMPLETE]}\n          </button>\n        </div>\n\n        <div className=\"incompleteSelection\">\n          <span className=\"hiddenTextIncompleteSelection\">\n            Mark Selection Incomplete\n          </span>\n          <button className=\"round\" onClick={() => updateCompletedValue(false)}>\n            {icons[ACTIONS.BULKINCOMPLETE]}\n          </button>\n        </div>\n\n        <div className=\"deleteSelection\">\n          <span className=\"hiddenTextDeleteSelection\">Delete Selection</span>\n          <button className=\"round\" onClick={onDelete}>\n            {icons[ACTIONS.BULKDELETE]}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { URGENCY, CATEGORY } from \"../constants\";\nimport { icons } from \"../icons\";\n\nconst IconButton = ({ value, filterState, handleClick }) => {\n  return Object.entries(value).map(([key, value]) => {\n    let className;\n    if (filterState[value]) {\n      className = \"icon larger\";\n    } else {\n      className = \"icon\";\n    }\n    return (\n      <button\n        onClick={handleClick}\n        className={className}\n        data-name={value}\n        key={key}\n      >\n        {icons[value]}\n      </button>\n    );\n  });\n};\nexport const FilterPanel = ({ filterState, toggleFilterState }) => {\n  const handleClick = (event) => {\n    const element = event.target.closest(\"[data-name]\");\n    if (element) {\n      toggleFilterState(element.dataset.name);\n    }\n  };\n  return (\n    <>\n      <div className=\"filter colorAndRadius\">\n        <div className=\"logos\">\n          {\n            <IconButton\n              value={URGENCY}\n              filterState={filterState}\n              handleClick={handleClick}\n            />\n          }\n          {\n            <IconButton\n              value={CATEGORY}\n              filterState={filterState}\n              handleClick={handleClick}\n            />\n          }\n        </div>\n        <p className=\"filterText\">Filter Todos</p>\n      </div>\n    </>\n  );\n};\n","const getRatioInDecimal = (numberOfTodos, numberOfCompletedTodos) => {\n  let value;\n  if (numberOfCompletedTodos === 0) {\n    value = 0;\n  } else {\n    value = Math.round((100 * numberOfCompletedTodos) / numberOfTodos);\n  }\n\n  return value + \" % \";\n};\n\nconst getRatioInFraction = (numberOfTodos, numberOfCompletedTodos) => {\n  return numberOfCompletedTodos + \" / \" + numberOfTodos;\n};\n\nexport const Analytics = ({ todos }) => {\n  const numberOfTodos = todos.length;\n  const numberOfCompletedTodos = todos.filter(\n    (todo) => todo.isCompleted === true\n  ).length;\n\n  const ratioInDecimal = getRatioInDecimal(\n    numberOfTodos,\n    numberOfCompletedTodos\n  );\n\n  const rationInFraction = getRatioInFraction(\n    numberOfTodos,\n    numberOfCompletedTodos\n  );\n  return (\n    <div className=\"analytics colorAndRadius\">\n      <div className=\"circle\">\n        <div className=\"percent\">{ratioInDecimal}</div>\n        <div className=\"ratio\">{rationInFraction}</div>\n      </div>\n      <p className=\"analyticsText\">Analytics</p>\n    </div>\n  );\n};\n","const helperFunctions = {\n  getTime: () => {\n    const date = new Date().toLocaleDateString();\n    const time = new Date().toLocaleTimeString();\n\n    return date + \", \" + time;\n  },\n\n  makeCopy: (item) => {\n    //If it is an array of objects\n    if (Array.isArray(item) && item[0] instanceof Object) {\n      return item.map((obj) => ({ ...obj }));\n    }\n    // Else if it is an object\n    else if (item instanceof Object) {\n      return { ...item };\n    }\n    //Primitive value\n    else {\n      return item;\n    }\n  },\n};\n\nconst convertToList = (object) => {\n  if (Array.isArray(object)) {\n    return object;\n  } else {\n    return [object];\n  }\n};\n\nhelperFunctions.convertToList = convertToList;\n\nexport { helperFunctions };\n","import React, { useReducer } from \"react\";\nimport { ACTIONS, CATEGORY, URGENCY, NAMES } from \"../constants\";\nimport { helperFunctions } from \"../helperFunctions\";\n\nconst initialTodo = {\n  [NAMES.TEXT]: \"\",\n  [NAMES.URGENCY]: URGENCY.LOW,\n  [NAMES.CATEGORY]: CATEGORY.PERSONAL,\n};\n\nconst reducer = (todo, action) => {\n  switch (action.type) {\n    case ACTIONS.UPDATE:\n      return { ...todo, [action.payload.type]: action.payload.value };\n\n    case ACTIONS.RESET:\n      return initialTodo;\n\n    default:\n      return todo;\n  }\n};\n\nconst createTodoObject = (todo) => {\n  return {\n    id: new Date().valueOf(),\n    isCompleted: false,\n    time: helperFunctions.getTime(),\n    ...todo,\n  };\n};\n\nconst Option = ({ value }) => {\n  return (\n    <>\n      {Object.entries(value).map(([key, value]) => {\n        return (\n          <option value={value} key={key}>\n            {value}\n          </option>\n        );\n      })}\n    </>\n  );\n};\n\nexport const CreateTodoForm = ({ onAction }) => {\n  const [todo, dispatch] = useReducer(reducer, initialTodo);\n\n  const handleKeyPress = (event) => {\n    const enterKey = event.keyCode || event.which || 0;\n    if (enterKey === 13 && todo.text) {\n      const todoObject = createTodoObject(todo);\n      onAction({\n        type: ACTIONS.ADD,\n        payload: todoObject,\n      }).then(() => {\n        dispatch({ type: ACTIONS.RESET });\n      });\n    }\n  };\n\n  const updateState = (event) => {\n    dispatch({\n      type: ACTIONS.UPDATE,\n      payload: {\n        type: event.target.dataset.type,\n        value: event.target.value,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"createTodo colorAndRadius\" onKeyPress={handleKeyPress}>\n        <div className=\"createText\">Create Todo</div>\n        <input\n          data-type={NAMES.TEXT}\n          value={todo[NAMES.TEXT]}\n          type=\"text\"\n          className=\"addTodo\"\n          placeholder=\"Add Your Todo...\"\n          onChange={updateState}\n        />\n        <div className=\"urgency\">\n          <p className=\"text\">Urgency</p>\n          <select\n            value={todo[NAMES.URGENCY]}\n            data-type={NAMES.URGENCY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={URGENCY} />}\n          </select>\n        </div>\n        <div className=\"category\">\n          <p className=\"text\">Category</p>\n          <select\n            value={todo[NAMES.CATEGORY]}\n            data-type={NAMES.CATEGORY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={CATEGORY} />}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useReducer } from \"react\";\nimport { ACTIONS } from \"../constants\";\nimport { helperFunctions } from \"../helperFunctions\";\nimport { Server } from \"../Server\";\n\nconst server = new Server();\n\nconst reducer = (todos, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD:\n      return [...todos, action.payload];\n\n    case ACTIONS.DELETE:\n      return todos.filter((todo) => todo.id !== action.payload);\n\n    case ACTIONS.UPDATE:\n      return todos.map((todo) => {\n        if (todo.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return todo;\n        }\n      });\n\n    default:\n      return todos;\n  }\n};\n\nexport const useTodoAppState = () => {\n  const [todos, dispatch] = useReducer(reducer, []);\n\n  useEffect(() => {\n    server.getDatabase().then((todos) => {\n      if (todos) {\n        todos.forEach?.((todo) => {\n          dispatch({\n            type: ACTIONS.ADD,\n            payload: todo,\n          });\n        });\n      }\n    });\n  }, []);\n\n  const addTodo = (todos) => {\n    return server.createTodo(todos).then(() => {\n      helperFunctions.convertToList(todos).forEach((todo) => {\n        dispatch({\n          type: ACTIONS.ADD,\n          payload: todo,\n        });\n      });\n    });\n  };\n\n  const deleteTodo = (todoIds) => {\n    return server.deleteTodo(todoIds).then(() => {\n      helperFunctions.convertToList(todoIds).forEach((id) => {\n        dispatch({\n          type: ACTIONS.DELETE,\n          payload: id,\n        });\n      });\n    });\n  };\n\n  const updateTodo = (todos) => {\n    return server.updateTodo(todos).then(() => {\n      helperFunctions.convertToList(todos).forEach((todo) => {\n        dispatch({\n          type: ACTIONS.UPDATE,\n          payload: todo,\n        });\n      });\n    });\n  };\n\n  const onAction = (action) => {\n    switch (action.type) {\n      case ACTIONS.ADD:\n        return addTodo(action.payload);\n\n      case ACTIONS.UPDATE:\n        return updateTodo(action.payload);\n\n      case ACTIONS.DELETE:\n        return deleteTodo(action.payload);\n\n      default:\n        break;\n    }\n  };\n\n  const findTodoById = (id) => {\n    return todos.find((todo) => todo.id === id);\n  };\n\n  return [todos, findTodoById, onAction];\n};\n","import { helperFunctions } from \"./helperFunctions.js\";\n\nexport class Server {\n  constructor() {\n    this.database = this.loadDatabaseFromLocalStorage();\n    this.FailProbability = 0;\n  }\n\n  isServerWorking = () => {\n    const current = Math.random();\n    if (current > this.FailProbability) {\n      return true;\n    }\n    return false;\n  };\n\n  getDatabase = () => {\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        resolve(helperFunctions.makeCopy(this.database));\n      } else {\n        reject(\"Please Refresh Again\");\n      }\n    });\n  };\n\n  saveDatabaseInLocalStorage = () =>\n    localStorage.setItem(\"todos\", JSON.stringify(this.database));\n\n  loadDatabaseFromLocalStorage = () =>\n    JSON.parse(localStorage.getItem(\"todos\")) || [];\n\n  findIndexOfTodoById = (id) =>\n    this.database.findIndex((todo) => todo.id === id);\n\n  createTodo = (todos) => {\n    const todoList = helperFunctions.convertToList(todos);\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        const todoListCopy = helperFunctions.makeCopy(todoList);\n        this.database = [...this.database, ...todoListCopy];\n        this.saveDatabaseInLocalStorage();\n        resolve(\"done\");\n      } else {\n        reject(\"Could Not Add Bulk Todos\");\n      }\n    });\n  };\n\n  deleteTodo = (todoIds) => {\n    const todoIdsList = helperFunctions.convertToList(todoIds);\n\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        this.database = this.database.filter((todo) => {\n          return !todoIdsList.includes(todo.id);\n        });\n        this.saveDatabaseInLocalStorage();\n\n        resolve(\"done\");\n      } else {\n        reject(\"Could Not Delete Selected Todos\");\n      }\n    });\n  };\n\n  updateTodo = (todos) => {\n    const todoList = helperFunctions.convertToList(todos);\n    return new Promise((resolve, reject) => {\n      if (this.isServerWorking()) {\n        const databaseCopy = helperFunctions.makeCopy(this.database);\n        todoList.forEach((todo) => {\n          const index = this.findIndexOfTodoById(todo.id);\n          databaseCopy[index] = { ...todo };\n        });\n        this.database = databaseCopy;\n        this.saveDatabaseInLocalStorage();\n        resolve(\"done\");\n      } else {\n        reject(\"Could Not Update Selected Todos\");\n      }\n    });\n  };\n}\n","import { URGENCY, CATEGORY, NAMES } from \"../constants\";\nimport { useState } from \"react\";\n\nconst initialFilterState = {\n  [URGENCY.LOW]: false,\n  [URGENCY.MEDIUM]: false,\n  [URGENCY.HIGH]: false,\n  [CATEGORY.PERSONAL]: false,\n  [CATEGORY.ACADEMIC]: false,\n  [CATEGORY.SOCIAL]: false,\n};\n\nexport const useFilterState = () => {\n  const [filterState, setFilterState] = useState(initialFilterState);\n\n  const toggleFilterState = (filter) => {\n    setFilterState((prev) => ({ ...prev, [filter]: !prev[filter] }));\n  };\n\n  const computeUrgencyFilterValue = () => {\n    return (\n      filterState[URGENCY.LOW] ||\n      filterState[URGENCY.MEDIUM] ||\n      filterState[URGENCY.HIGH]\n    );\n  };\n\n  const computeCategoryFilterValue = () => {\n    return (\n      filterState[CATEGORY.PERSONAL] ||\n      filterState[CATEGORY.ACADEMIC] ||\n      filterState[CATEGORY.SOCIAL]\n    );\n  };\n\n  const filterAccordingToUrgencyAndCategory = (todos) => {\n    return todos.filter((todo) => {\n      return (\n        filterState[[todo[NAMES.URGENCY]]] ||\n        filterState[[todo[NAMES.CATEGORY]]]\n      );\n    });\n  };\n\n  const filterTodos = (todos) => {\n    const urgencyFilter = computeUrgencyFilterValue();\n\n    const categoryFilter = computeCategoryFilterValue();\n\n    if (urgencyFilter === false && categoryFilter === false) {\n      return todos;\n    }\n\n    return filterAccordingToUrgencyAndCategory(todos);\n  };\n\n  return [filterState, filterTodos, toggleFilterState];\n};\n","import React, { useState } from \"react\";\nimport { ACTIONS, CATEGORY, NAMES, URGENCY } from \"../constants\";\n\nconst Option = ({ value }) => {\n  return (\n    <>\n      {Object.entries(value).map(([key, value]) => {\n        return (\n          <option value={value} key={key}>\n            {value}\n          </option>\n        );\n      })}\n    </>\n  );\n};\nexport const Modal = ({ todo, closeEditWindow, onAction }) => {\n  const [updatedTodo, setUpdatedTodo] = useState(todo);\n\n  const updateState = (event) => {\n    setUpdatedTodo((prev) => ({\n      ...prev,\n      [event.target.dataset.type]: event.target.value,\n    }));\n  };\n\n  const onCancel = () => {\n    closeEditWindow();\n  };\n\n  const onSave = () => {\n    onAction({\n      type: ACTIONS.UPDATE,\n      payload: updatedTodo,\n    });\n    closeEditWindow();\n  };\n\n  return (\n    <div className=\"myModal\">\n      <div className=\"modalContent\">\n        <input\n          data-type={NAMES.TEXT}\n          type=\"text\"\n          className=\"addTodo\"\n          value={updatedTodo[NAMES.TEXT]}\n          onChange={updateState}\n        />\n        <div className=\"urgency\">\n          <p className=\"text\">Urgency</p>\n          <select\n            value={updatedTodo[NAMES.URGENCY]}\n            data-type={NAMES.URGENCY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={URGENCY} />}\n          </select>\n        </div>\n        <div className=\"category\">\n          <p className=\"text\">Category</p>\n          <select\n            value={updatedTodo[NAMES.CATEGORY]}\n            data-type={NAMES.CATEGORY}\n            className=\"selector\"\n            onChange={updateState}\n          >\n            {<Option value={CATEGORY} />}\n          </select>\n        </div>\n        <div className=\"modalButtons\">\n          <button className=\"cancel\" onClick={onCancel}>\n            Cancel\n          </button>\n          <button className=\"save\" onClick={onSave}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { TodoList } from \"./TodoList\";\nimport { BulkSelectors } from \"./BulkSelectors\";\nimport { FilterPanel } from \"./FilterPanel\";\nimport { Analytics } from \"./Analytics\";\nimport { CreateTodoForm } from \"./CreateTodoForm\";\nimport { useTodoAppState } from \"../customHooks/useTodoAppState\";\nimport { useFilterState } from \"../customHooks/useFilterState\";\nimport { useState } from \"react\";\nimport { useEditWindow } from \"../customHooks/useEditWindow\";\nexport const TodoApp = () => {\n  const [todos, findTodoById, onAction] = useTodoAppState();\n  const [filterState, filterTodos, toggleFilterState] = useFilterState();\n  const [editWindow, showEditWindow] = useEditWindow(onAction);\n  const [selectedTodoIds, setSelectedTodoIds] = useState([]);\n\n  const toggleSelectTodo = (id) => {\n    setSelectedTodoIds((prev) => {\n      if (prev.includes(id)) {\n        return prev.filter((todoId) => todoId !== id);\n      } else {\n        return prev.concat(id);\n      }\n    });\n  };\n\n  const resetSelectedTodoIds = () => {\n    setSelectedTodoIds([]);\n  };\n\n  const filteredTodos = filterTodos(todos);\n\n  return (\n    <>\n      <div className=\"mainBody\">\n        <div className=\"col1 colorAndRadius\">\n          <TodoList\n            todos={filteredTodos}\n            onAction={onAction}\n            toggleSelectTodo={toggleSelectTodo}\n            selectedTodoIds={selectedTodoIds}\n            showEditWindow={showEditWindow}\n          />\n          <BulkSelectors\n            selectedTodoIds={selectedTodoIds}\n            resetSelectedTodoIds={resetSelectedTodoIds}\n            onAction={onAction}\n            findTodoById={findTodoById}\n          />\n        </div>\n\n        <div className=\"col2\">\n          <FilterPanel\n            filterState={filterState}\n            toggleFilterState={toggleFilterState}\n          />\n          <Analytics todos={filteredTodos} />\n          <CreateTodoForm onAction={onAction} />\n        </div>\n      </div>\n      {editWindow}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Modal } from \"../components/Modal\";\n\nexport const useEditWindow = (onAction) => {\n  const [editWindow, setEditWindow] = useState({ show: false });\n\n  const showEditWindow = (todo) => {\n    setEditWindow({ show: true, payload: todo });\n  };\n\n  const closeEditWindow = () => {\n    setEditWindow({ show: false });\n  };\n\n  let modal = undefined;\n  if (editWindow.show === true) {\n    modal = (\n      <Modal\n        todo={editWindow.payload}\n        closeEditWindow={closeEditWindow}\n        onAction={onAction}\n      />\n    );\n  }\n\n  return [modal, showEditWindow];\n};\n","export const Header = () => {\n  const currentDate = new Date().toDateString();\n  return (\n    <>\n      <div className=\"header colorAndRadius\">\n        <div className=\"date\">{currentDate}</div>\n        <div className=\"heading\">To-Do App</div>\n      </div>\n    </>\n  );\n};\n","import \"./App.css\";\nimport { TodoApp } from \"./components/TodoApp\";\nimport { Header } from \"./components/Header\";\nfunction App() {\n  return (\n    <>\n      <Header />\n      <TodoApp />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}